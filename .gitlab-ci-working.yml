# GitLab CI/CD Pipeline for OSDU-CI Kubernetes Development Environment  
# Tests the GitOps-first user experience: make up → make test → make clean

stages:
  - integration-test

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_HOST: tcp://docker:2375  
  DOCKER_TLS_CERTDIR: ""
  KUBECONFIG: "$CI_PROJECT_DIR/data/kubeconfig/config"

test-gitops-experience:
  stage: integration-test
  image: docker:24.0
  services:
    - docker:24.0-dind
  before_script:
    - echo "Installing dependencies..."
    - apk add --no-cache make bash curl jq
    - curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.25.0/kind-linux-amd64
    - chmod +x ./kind && mv ./kind /usr/local/bin/
    - curl -LO "https://dl.k8s.io/release/v1.31.0/bin/linux/amd64/kubectl" 
    - chmod +x kubectl && mv kubectl /usr/local/bin/
    - curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
    - curl -s https://fluxcd.io/install.sh | bash
    - mv /root/.local/bin/flux /usr/local/bin/
    - echo "Tools ready - testing OSDU-CI workflow"
    - kind version && kubectl version --client --short && docker version
  script:
    - echo "Step 1 - Creating GitOps cluster"
    - make up
    - echo "Step 2 - Running validation tests" 
    - make test
    - echo "Step 3 - Testing GitOps integration"
    - sleep 60
    - kubectl wait --for=condition=available --timeout=600s deployment/demo-app
    - kubectl port-forward svc/demo-app 8080:80 &
    - sleep 15
    - curl -f http://localhost:8080 | grep -i "OSDU-CI GitOps Demo"
    - flux get sources git -n flux-system
    - echo "GitOps integration test completed successfully"
  after_script:
    - echo "Cleaning up resources"
    - make clean || true