# Simple demo application - avoids Docker Hub rate limits
apiVersion: v1
kind: ConfigMap
metadata:
  name: demo-app-html
  namespace: default
data:
  index.html: |
    <!DOCTYPE html>
    <html><head><title>OSDU-CI GitOps Demo</title>
    <style>
    body{font-family:Arial;margin:40px;background:#f5f5f5}
    .container{max-width:600px;margin:0 auto;background:white;padding:30px;border-radius:8px;box-shadow:0 2px 10px rgba(0,0,0,0.1)}
    h1{color:#2563eb;margin-bottom:20px}
    .status{background:#10b981;color:white;padding:8px 16px;border-radius:4px;display:inline-block;margin:10px 0}
    .info{background:#f3f4f6;padding:15px;border-radius:4px;margin:15px 0}
    code{background:#e5e7eb;padding:2px 4px;border-radius:2px}
    </style></head>
    <body><div class="container">
    <h1>ðŸš€ OSDU-CI GitOps Demo</h1>
    <div class="status">âœ… Successfully deployed via Flux GitOps!</div>
    <div class="info">
    <strong>What you're seeing:</strong><br/>
    â€¢ This app was deployed automatically by Flux<br/>
    â€¢ Flux monitors your Git repository for changes<br/>
    â€¢ NGINX Ingress Controller routes traffic to this app<br/>
    â€¢ Accessible via: <code>http://localhost:8080</code>
    </div>
    <p><strong>Next steps:</strong> Try modifying the GitOps configuration in <code>software/stamp/</code> and commit changes to see GitOps in action!</p>
    </div></body></html>
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: demo-app
  namespace: default
  labels:
    app: demo-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: demo-app
  template:
    metadata:
      labels:
        app: demo-app
    spec:
      containers:
      - name: nginx
        image: mcr.microsoft.com/cbl-mariner/base/nginx:1.22
        ports:
        - containerPort: 80
        volumeMounts:
        - name: html
          mountPath: /usr/share/nginx/html
        resources:
          requests:
            memory: "16Mi"
            cpu: "10m"
          limits:
            memory: "32Mi"
            cpu: "50m"
      volumes:
      - name: html
        configMap:
          name: demo-app-html
---
apiVersion: v1
kind: Service
metadata:
  name: demo-app
  namespace: default
spec:
  selector:
    app: demo-app
  ports:
  - port: 80
    targetPort: 80
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: demo-app
  namespace: default
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  ingressClassName: nginx
  rules:
  - http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: demo-app
            port:
              number: 80