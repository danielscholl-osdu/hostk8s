apiVersion: apps/v1
kind: Deployment
metadata:
  name: pgadmin4
  namespace: hostk8s
  labels:
    hostk8s.component: postgres
    app: pgadmin4
    component: management-ui
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pgadmin4
      component: management-ui
  template:
    metadata:
      labels:
        app: pgadmin4
        component: management-ui
        hostk8s.component: postgres
    spec:
      containers:
      - name: pgadmin4
        image: dpage/pgadmin4:8.11
        ports:
        - containerPort: 5050
          name: http
        env:
        - name: PGADMIN_LISTEN_PORT
          value: "5050"
        - name: PGADMIN_DEFAULT_EMAIL
          valueFrom:
            secretKeyRef:
              name: pgadmin4-credentials
              key: email
        - name: PGADMIN_DEFAULT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: pgadmin4-credentials
              key: password
        - name: PGADMIN_CONFIG_SERVER_MODE
          value: "True"
        - name: PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED
          value: "False"
        - name: SCRIPT_NAME
          value: "/postgres"
        - name: PGADMIN_CONFIG_PROXY_X_FOR_COUNT
          value: "1"
        - name: PGADMIN_CONFIG_PROXY_X_PROTO_COUNT
          value: "1"
        - name: PGADMIN_CONFIG_PROXY_X_HOST_COUNT
          value: "1"
        - name: PGADMIN_CONFIG_PROXY_X_PORT_COUNT
          value: "1"
        - name: PGADMIN_CONFIG_PROXY_X_PREFIX_COUNT
          value: "1"
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /postgres/login
            port: 5050
          initialDelaySeconds: 120
          periodSeconds: 30
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /postgres/login
            port: 5050
          initialDelaySeconds: 90
          periodSeconds: 15
          timeoutSeconds: 5
