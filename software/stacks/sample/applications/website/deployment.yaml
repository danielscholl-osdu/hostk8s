apiVersion: apps/v1
kind: Deployment
metadata:
  name: sample-website
  namespace: sample-website
  labels:
    app: sample-website
    hostk8s.application: website
spec:
  replicas: 2
  selector:
    matchLabels:
      app: sample-website
  template:
    metadata:
      labels:
        app: sample-website
        hostk8s.application: website
    spec:
      containers:
      - name: website
        image: mcr.microsoft.com/azurelinux/base/nginx:1.25
        ports:
        - containerPort: 80
        env:
        - name: API_URL
          value: "http://sample-api.sample-api.svc.cluster.local"
        resources:
          requests:
            memory: "32Mi"
            cpu: "25m"
          limits:
            memory: "64Mi"
            cpu: "50m"
        volumeMounts:
        - name: website-content
          mountPath: /usr/share/nginx/html
      volumes:
      - name: website-content
        configMap:
          name: sample-website-content
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: sample-website-content
  namespace: sample-website
  labels:
    hostk8s.application: website
data:
  index.html: |
    <!DOCTYPE html>
    <html>
    <head>
        <title>Sample Website</title>
        <meta charset="UTF-8">
        <style>
            body { font-family: Arial, sans-serif; margin: 40px; background: #f5f5f5; }
            .container { max-width: 800px; margin: 0 auto; background: white; padding: 40px; border-radius: 10px; box-shadow: 0 2px 10px rgba(0,0,0,0.1); }
            .stamp-info { padding: 20px; background: #d4edda; border: 1px solid #c3e6cb; border-radius: 5px; margin: 20px 0; }
            .component { background: #e2e3e5; padding: 15px; margin: 10px 0; border-radius: 5px; }
            .application { background: #d1ecf1; padding: 15px; margin: 10px 0; border-radius: 5px; }
            h1 { color: #495057; text-align: center; }
            code { background: #f8f9fa; padding: 2px 6px; border-radius: 3px; }
            .test-btn { background: #007bff; color: white; padding: 10px 20px; border: none; border-radius: 5px; cursor: pointer; margin: 5px; }
        </style>
    </head>
    <body>
        <div class="container">
            <h1>üè¢ Sample Website - GitOps Stamp Pattern</h1>

            <div class="stamp-info">
                <h2>‚úÖ GitOps Stamp Successfully Deployed!</h2>
                <p>This demonstrates the <strong>Component/Application</strong> separation pattern managed by Flux.</p>
            </div>

            <h3>üß± Components</h3>
            <div class="component">
                <h4>component-metrics-server</h4>
                <p><strong>Git Source:</strong> flux-system</p>
            </div>

            <div class="component">
                <h4>component-certs</h4>
                <p><strong>Git Source:</strong> flux-system</p>
            </div>

            <div class="component">
                <h4>component-certs-ca</h4>
                <p><strong>Git Source:</strong> flux-system</p>
            </div>

            <div class="component">
                <h4>component-certs-issuer</h4>
                <p><strong>Git Source:</strong> flux-system</p>
            </div>

            <div class="component">
                <h4>component-ingress-nginx</h4>
                <p><strong>Git Source:</strong> flux-system</p>
            </div>

            <h3>üöÄ Applications</h3>
            <div class="application">
                <h4>app-sample-api</h4>
                <p><strong>Git Source:</strong> flux-system</p>
                <p><strong>Access:</strong> <a href="/api">http://localhost:8080/api</a></p>
                <p><button class="test-btn" onclick="testAPI()">Test API Connection</button></p>
            </div>

            <div class="application">
                <h4>app-sample-website</h4>
                <p><strong>Git Source:</strong> flux-system</p>
                <p><strong>Access:</strong> <a href="/">http://localhost:8080/</a></p>
            </div>

            <div style="margin-top: 30px; padding: 20px; background: #fff3cd; border-radius: 5px;">
                <h3>üíæ Storage Persistence Test</h3>
                <p>Test persistent storage using local-path-provisioner:</p>
                <div id="storage-status" style="margin: 10px 0; padding: 10px; background: #f8f9fa; border-radius: 3px;">
                    <strong>Status:</strong> <span id="file-status">Loading...</span>
                </div>
                <div style="margin: 10px 0;">
                    <button class="test-btn" onclick="writeTestFile()">Write Test File</button>
                    <button class="test-btn" onclick="checkTestFile()">Check File Status</button>
                    <button class="test-btn" onclick="deleteTestFile()">Delete Test File</button>
                </div>
                <div id="storage-info" style="margin-top: 10px; font-size: 0.9em; color: #6c757d;">
                    <strong>Info:</strong> Files written to <code>/app/storage/test.txt</code> persist across pod restarts
                </div>
            </div>
        </div>

        <script>
            function testAPI() {
                alert('Testing API connection to:\\nhttp://sample-api.sample-api.svc.cluster.local\\n\\nIn the GitOps pattern, services communicate via Kubernetes DNS!');
            }

            async function makeAPICall(endpoint, method = 'GET') {
                try {
                    const response = await fetch('/api' + endpoint, { method });
                    const data = await response.text();
                    return { success: response.ok, data, status: response.status };
                } catch (error) {
                    return { success: false, data: error.message, status: 0 };
                }
            }

            async function writeTestFile() {
                document.getElementById('file-status').innerText = 'Writing...';
                const result = await makeAPICall('/storage/test', 'POST');
                if (result.success) {
                    document.getElementById('file-status').innerText = 'File written successfully ‚úÖ';
                } else {
                    document.getElementById('file-status').innerText = `Write failed: ${result.data}`;
                }
            }

            async function checkTestFile() {
                document.getElementById('file-status').innerText = 'Checking...';
                const result = await makeAPICall('/storage/test', 'GET');
                if (result.success) {
                    document.getElementById('file-status').innerText = `File exists ‚úÖ - Content: ${result.data}`;
                } else if (result.status === 404) {
                    document.getElementById('file-status').innerText = 'File not found ‚ùå';
                } else {
                    document.getElementById('file-status').innerText = `Check failed: ${result.data}`;
                }
            }

            async function deleteTestFile() {
                document.getElementById('file-status').innerText = 'Deleting...';
                const result = await makeAPICall('/storage/test', 'DELETE');
                if (result.success) {
                    document.getElementById('file-status').innerText = 'File deleted successfully ‚úÖ';
                } else {
                    document.getElementById('file-status').innerText = `Delete failed: ${result.data}`;
                }
            }

            // Check file status on page load
            window.onload = function() {
                checkTestFile();
            };
        </script>
    </body>
    </html>
