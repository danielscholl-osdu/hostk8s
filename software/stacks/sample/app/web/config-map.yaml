apiVersion: v1
kind: ConfigMap
metadata:
  name: sample-website-content
  namespace: sample
  labels:
    hostk8s.application: website
data:
  index.html: |
    <!DOCTYPE html>
    <html lang="en">
    <head>
      <meta charset="UTF-8" />
      <meta name="viewport" content="width=device-width, initial-scale=1" />
      <title>Sample Stack • GitOps Demo</title>
      <meta name="color-scheme" content="light dark" />
      <style>
        :root {
          --bg: #0b1020;
          --bg-card: rgba(255,255,255,0.08);
          --surface: rgba(255,255,255,0.06);
          --text: #e6e9f2;
          --muted: #aab1c3;
          --accent: #7c9cff;
          --accent-2: #5de6c2;
          --good: #4ad27a;
          --warn: #ffd166;
          --bad: #ff6b6b;
          --code: #0f1429;
          --shadow: 0 10px 30px rgba(0,0,0,.35);
        }

        @media (prefers-color-scheme: light) {
          :root {
            --bg: #f5f7fb;
            --bg-card: #ffffff;
            --surface: #f3f5fb;
            --text: #1e2330;
            --muted: #5b637a;
            --accent: #3b6cff;
            --accent-2: #1dbf9f;
            --good: #2fb772;
            --warn: #d7a500;
            --bad: #e5484d;
            --code: #f3f5fb;
            --shadow: 0 10px 25px rgba(38, 43, 63, .12);
          }
        }

        * { box-sizing: border-box; }
        html, body { height: 100%; }
        body {
          margin: 0;
          font: 16px/1.6 system-ui, -apple-system, Segoe UI, Roboto, Ubuntu, Cantarell, Noto Sans, Helvetica, Arial, "Apple Color Emoji", "Segoe UI Emoji";
          color: var(--text);
          background:
            radial-gradient(1200px 600px at 10% -10%, rgba(124,156,255,.35), transparent 60%),
            radial-gradient(800px 500px at 90% -10%, rgba(93,230,194,.25), transparent 50%),
            linear-gradient(180deg, #0b1020 0%, var(--bg) 40% 100%);
          background-attachment: fixed;
          overflow-x: hidden;
        }

        .wrap { max-width: 1100px; margin: 0 auto; padding: 28px; }

        .hero {
          margin-top: 24px;
        }

        .panel {
          background: var(--bg-card);
          border: 1px solid rgba(255,255,255,.14);
          border-radius: 18px;
          box-shadow: var(--shadow);
          padding: 22px 22px 18px;
        }

        h1 { font-size: clamp(26px, 2.2vw, 34px); margin: 0 0 6px; letter-spacing: .3px; }
        .lead { color: var(--muted); margin: 0; }

        .status {
          display:flex; gap: 14px; align-items:center; margin-top: 14px; padding: 12px; border-radius: 12px;
          background: linear-gradient(135deg, rgba(93,230,194,.18), rgba(124,156,255,.15));
          border: 1px solid rgba(124,156,255,.25);
        }

        .grid { display:grid; gap: 18px; grid-template-columns: repeat(12, 1fr); margin-top: 18px; }
        .col-4 { grid-column: span 4; }
        .col-6 { grid-column: span 6; }
        .col-8 { grid-column: span 8; }
        .col-12 { grid-column: span 12; }
        @media (max-width: 960px){ .col-4,.col-6,.col-8{ grid-column: span 12; } }

        .section-title { display:flex; align-items:center; gap:10px; margin: 6px 0 6px; font-size: 14px; color: var(--muted); text-transform: uppercase; letter-spacing:.14em; }
        .card { background: var(--bg-card); border: 1px solid rgba(255,255,255,.14); border-radius: 16px; padding: 16px; box-shadow: var(--shadow); transition: transform .18s ease, box-shadow .18s ease; }
        .card:hover { transform: translateY(-2px); box-shadow: 0 12px 30px rgba(0,0,0,.22); }
        .card h3 { margin: 6px 0 4px; font-size: 18px; }
        .subtle { color: var(--muted); font-size: 14px; }

        .kv { display:flex; flex-wrap: wrap; gap: 8px 14px; margin-top: 8px; }
        .kv div { display:flex; gap: 8px; align-items:center; background: var(--surface); border: 1px solid rgba(255,255,255,.12); padding: 6px 10px; border-radius: 10px; font-size: 14px; }
        code { font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", monospace; background: var(--code); border: 1px solid rgba(255,255,255,.12); padding: 2px 6px; border-radius: 8px; }

        .actions { display:flex; gap:10px; flex-wrap: wrap; margin-top: 12px; }

        /* Buttons: base + variants */
        .btn {
          appearance: none;
          padding: 10px 14px;
          border-radius: 12px;
          font-weight: 600;
          cursor: pointer;
          border: none;
          background: linear-gradient(135deg, #6366f1 0%, #8b5cf6 100%);
          color: #fff;
          box-shadow: var(--shadow);
          transition: transform .15s ease, opacity .15s ease, border-color .15s ease;
        }
        .btn:hover { transform: translateY(-1px); border-color: rgba(255,255,255,.28); }
        .btn:active { transform: translateY(0); opacity: .95; }
        .btn:focus-visible { outline: 2px solid var(--accent); outline-offset: 2px; }


        /* Make ghost distinct (transparent, bordered) */
        .btn.ghost {
          background: transparent;
          border: 1px solid rgba(124,156,255,.45);
          color: var(--accent);
        }

        .apps { display:grid; grid-template-columns: repeat(2, minmax(0, 1fr)); gap: 16px; }
        @media (max-width: 720px) { .apps { grid-template-columns: 1fr; } }

        .link { color: var(--accent); font-weight: 600; text-decoration: none; border-bottom: 1px dashed rgba(124,156,255,.45); }
        .link:hover { opacity: .9; }

        .pill { display:inline-flex; align-items:center; gap:8px; padding: 6px 10px; border-radius: 999px; background: var(--surface); border: 1px solid rgba(255,255,255,.12); font-size: 13px; }
        .pill.shared { background: rgba(124,156,255,.18); border: 1px solid rgba(124,156,255,.35); color: var(--accent); }
        .pill.stack { background: rgba(93,230,194,.18); border: 1px solid rgba(93,230,194,.35); color: var(--accent-2); }
        .pill.components { background: rgba(124,156,255,.18); border: 1px solid rgba(124,156,255,.35); color: var(--accent); }
        .pill.applications { background: rgba(93,230,194,.18); border: 1px solid rgba(93,230,194,.35); color: var(--accent-2); }

        /* Status pill */
        .pill.ok {
          display:inline-flex; align-items:center; gap:8px;
          padding:6px 10px; border-radius:999px;
          background: rgba(93,230,194,.18);
          border: 1px solid rgba(93,230,194,.35);
          color:#0d3d31; font-size:13px; font-weight:700;
        }
        .pill.ok::before { content:""; width:8px; height:8px; border-radius:999px; background:#4ad27a; box-shadow:0 0 0 3px rgba(74,210,122,.2); }

        .mono { font-variant-ligatures: none; }

        .toast { position: fixed; right: 18px; bottom: 18px; background: var(--bg-card); border: 1px solid rgba(255,255,255,.14); box-shadow: var(--shadow); border-radius: 12px; padding: 12px 14px; display:none; }
        .toast.show { display:block; animation: fadein .2s ease; }
        @keyframes fadein { from{ opacity:.2; transform: translateY(6px);} to{opacity:1; transform: translateY(0);} }

        /* Toast: reduced motion */
        @media (prefers-reduced-motion: reduce) {
          .toast.show { animation: none; }
        }

        .tiny { font-size: 12px; color: var(--muted); }
        .error { color: var(--bad); }
        .success { color: var(--good); }
        .git-source { color: rgba(107, 114, 126, 0.9); }
      </style>
    </head>
    <body>
      <main class="wrap">
        <section class="hero">
          <div class="panel">
            <h1>Stack: <strong>Sample</strong></h1>
            <p class="lead">Interactive GitOps demo showcasing shared components, persistent storage, and stack-specific applications.</p>
            <div class="status">
              <span style="font-weight: 600;">GitOps Resources</span>
              <span class="pill components">5 Components</span>
              <span class="pill applications">2 Applications</span>
            </div>

            <div class="grid">
              <div class="col-6">
                <div class="section-title">API</div>
                <div class="card">
                  <p class="subtle">Services communicate via Kubernetes DNS in‑cluster.</p>
                  <div class="kv">
                    <div><strong>Service</strong> <code>sample-api.sample.svc.cluster.local</code></div>
                    <div><strong>URI Path:</strong> <code>/api</code></div>
                  </div>
                  <div class="actions">
                    <button class="btn primary" onclick="testAPI()">Test API</button>
                  </div>
                </div>
              </div>

              <div class="col-6">
                <div class="section-title">Storage</div>
                <div class="card">
                  <div class="kv">
                    <div><strong>Provider</strong> <code>local-path-provisioner</code></div>
                    <div><strong>Host Path:</strong> <code>data/storage/sample</code></div>
                    <div><strong>Container Path:</strong> <code>/app/storage</code></div>
                  </div>
                  <div id="storage-status" class="subtle" style="margin-top:10px">Status: <span id="file-status" class="mono">Loading…</span></div>
                  <div class="actions">
                    <button class="btn" onclick="writeTestFile()">Write File</button>
                    <button class="btn" onclick="checkTestFile()">Check File</button>
                    <button class="btn" onclick="deleteTestFile()">Remove File</button>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </section>

        <section style="margin-top:22px">
          <div class="section-title">Components</div>
          <div class="grid">
            <div class="col-4">
              <div class="card">
                <h3>component-metrics-server</h3>
                <div class="git-source"><strong>Git Source:</strong> <code>flux-system</code></div>
                <div class="pill shared" style="margin-top:8px">Shared</div>
              </div>
            </div>
            <div class="col-4">
              <div class="card">
                <h3>component-certs</h3>
                <div class="git-source"><strong>Git Source:</strong> <code>flux-system</code></div>
                <div class="pill shared" style="margin-top:8px">Shared</div>
              </div>
            </div>
            <div class="col-4">
              <div class="card">
                <h3>component-certs-ca</h3>
                <div class="git-source"><strong>Git Source:</strong> <code>flux-system</code></div>
                <div class="pill shared" style="margin-top:8px">Shared</div>
              </div>
            </div>
            <div class="col-4">
              <div class="card">
                <h3>component-certs-issuer</h3>
                <div class="git-source"><strong>Git Source:</strong> <code>flux-system</code></div>
                <div class="pill shared" style="margin-top:8px">Shared</div>
              </div>
            </div>
            <div class="col-4">
              <div class="card">
                <h3>component-ingress-nginx</h3>
                <div class="git-source"><strong>Git Source:</strong> <code>flux-system</code></div>
                <div class="pill stack" style="margin-top:8px">Stack</div>
              </div>
            </div>
          </div>
        </section>

        <section style="margin-top:22px">
          <div class="section-title">Applications</div>
          <div class="grid">
            <div class="col-6">
              <div class="card">
                <h3>app-sample-website</h3>
                <div class="git-source"><strong>Git Source:</strong> <code>flux-system</code></div>
                <div class="subtle" style="margin-top:4px"><strong>URI Path:</strong> <code>/</code></div>
                <div class="pill stack" style="margin-top:8px">Stack</div>
              </div>
            </div>
            <div class="col-6">
              <div class="card">
                <h3>app-sample-api</h3>
                <div class="git-source"><strong>Git Source:</strong> <code>flux-system</code></div>
                <div class="subtle" style="margin-top:4px"><strong>URI Path:</strong> <code>/api</code></div>
                <div class="pill stack" style="margin-top:8px">Stack</div>
              </div>
            </div>
          </div>
        </section>

      </main>

      <div id="toast" class="toast" role="status" aria-live="polite"></div>

      <script>
        const toast = (msg) => {
          const el = document.getElementById('toast');
          el.textContent = msg; el.classList.add('show');
          setTimeout(() => el.classList.remove('show'), 2400);
        };

        function testAPI() {
          toast('Testing API connection…');
          alert('Testing API connection to:\nhttps://localhost:8443/api');
        }

        async function makeAPICall(endpoint, method = 'GET') {
          try {
            const response = await fetch('/api' + endpoint, { method });
            const data = await response.text();
            return { success: response.ok, data, status: response.status };
          } catch (error) {
            return { success: false, data: error.message, status: 0 };
          }
        }

        async function writeTestFile() {
          document.getElementById('file-status').innerText = 'Writing…';
          const result = await makeAPICall('/storage/test', 'POST');
          if (result.success) {
            document.getElementById('file-status').innerHTML = '<span class="success">File written successfully</span>';
            toast('File written');
          } else {
            document.getElementById('file-status').innerText = `Write failed: ${result.data}`;
            toast('Write failed');
          }
        }

        async function checkTestFile() {
          document.getElementById('file-status').innerText = 'Checking…';
          const result = await makeAPICall('/storage/test', 'GET');
          if (result.success) {
            document.getElementById('file-status').innerHTML = `<span class="success">File exists</span><br><strong>Content:</strong><br><pre style="background: var(--code); padding: 10px; border-radius: 10px; margin-top: 6px; border:1px solid rgba(255,255,255,.12); white-space: pre-wrap;">${result.data}</pre>`;
            toast('File found');
          } else if (result.status === 404) {
            document.getElementById('file-status').innerHTML = '<span class="error">File not found</span>';
            toast('File not found');
          } else {
            document.getElementById('file-status').innerText = `Check failed: ${result.data}`;
            toast('Check failed');
          }
        }

        async function deleteTestFile() {
          document.getElementById('file-status').innerText = 'Deleting…';
          const result = await makeAPICall('/storage/test', 'DELETE');
          if (result.success) {
            document.getElementById('file-status').innerHTML = '<span class="success">File deleted successfully</span>';
            toast('File deleted');
          } else {
            document.getElementById('file-status').innerText = `Delete failed: ${result.data}`;
            toast('Delete failed');
          }
        }

        // Initial check
        window.addEventListener('load', () => { checkTestFile(); });
      </script>
    </body>
    </html>
