---
# Registry UI Deployment (Joxit)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: registry-ui
  namespace: registry
  labels:
    app: registry-ui
    hostk8s.addon: registry
spec:
  replicas: 1
  selector:
    matchLabels:
      app: registry-ui
  template:
    metadata:
      labels:
        app: registry-ui
        hostk8s.addon: registry
    spec:
      containers:
      - name: registry-ui
        image: joxit/docker-registry-ui:main
        ports:
        - containerPort: 80
          name: http
        env:
        - name: SINGLE_REGISTRY
          value: "true"
        - name: REGISTRY_TITLE
          value: "HostK8s Container Registry"
        - name: DELETE_IMAGES
          value: "true"
        - name: SHOW_CONTENT_DIGEST
          value: "true"
        - name: NGINX_PROXY_PASS_URL
          value: "http://registry-core.registry.svc.cluster.local:5000"
        - name: SHOW_CATALOG_NB_TAGS
          value: "true"
        - name: CATALOG_MIN_BRANCHES
          value: "1"
        - name: CATALOG_MAX_BRANCHES
          value: "1"
        - name: TAGLIST_PAGE_SIZE
          value: "100"
        - name: REGISTRY_SECURED
          value: "false"
        - name: CATALOG_ELEMENTS_LIMIT
          value: "1000"
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 10

---
# Registry UI Service (ClusterIP for ingress)
apiVersion: v1
kind: Service
metadata:
  name: registry-ui
  namespace: registry
  labels:
    app: registry-ui
    hostk8s.addon: registry
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 80
    targetPort: 80
  selector:
    app: registry-ui

---
# Registry UI Ingress (requires NGINX Ingress Controller)
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: registry-ui
  namespace: registry
  labels:
    app: registry-ui
    hostk8s.addon: registry
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
spec:
  ingressClassName: nginx
  rules:
  - host: registry.localhost
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: registry-ui
            port:
              number: 80
