events {
    worker_connections 1024;
}

http {
    upstream vote {
        server vote:80;
    }

    upstream result {
        server result:80;
    }

    server {
        listen 80;
        server_name localhost;

        # Vote service - matches HostK8s ingress routing
        location /vote/ {
            rewrite ^/vote/(.*)$ /$1 break;
            proxy_pass http://vote;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Result service - matches HostK8s ingress routing
        location /result/ {
            rewrite ^/result/(.*)$ /$1 break;
            proxy_pass http://result;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # WebSocket support for Socket.IO
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_read_timeout 86400;
            proxy_send_timeout 86400;
        }

        # Health check endpoint
        location /health {
            return 200 "nginx proxy healthy\n";
            add_header Content-Type text/plain;
        }
    }
}
