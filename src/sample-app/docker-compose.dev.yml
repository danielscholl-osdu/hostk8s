version: '3.8'

services:
  vote:
    build:
      context: ./vote
      target: dev
    ports:
      - "5000:5000"
    environment:
      - FLASK_DEBUG=true
      - REDIS_HOST=redis
      - PORT=5000
      - OPTION_A=Kubernetes
      - OPTION_B=Docker Swarm
    volumes:
      - ./vote:/usr/local/app
    depends_on:
      - redis
    networks:
      - sample-network

  result:
    build:
      context: ./result
      target: dev
    ports:
      - "4000:4000"
    environment:
      - NODE_ENV=development
      - PORT=4000
      - DATABASE_URL=postgres://postgres:postgres@db/postgres
    volumes:
      - ./result:/usr/local/app
    depends_on:
      - db
    networks:
      - sample-network

  worker:
    build:
      context: ../example-voting-app/worker
    environment:
      - REDIS_HOST=redis
      - POSTGRES_HOST=db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    depends_on:
      - redis
      - db
    networks:
      - sample-network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    networks:
      - sample-network

  db:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - sample-network

volumes:
  redis-data:
  db-data:

networks:
  sample-network:
    driver: bridge
