# GitLab CI/CD Pipeline for OSDU-CI Development Environment
# Hybrid approach: Fast validation + Basic Kubernetes testing

stages:
  - validate
  - test-kubernetes

validate-basic:
  stage: validate
  image: alpine:latest
  script:
    - echo "Testing basic GitLab CI validation approach"
    - ls -la
    - test -f Makefile
    - test -f README.md
    - test -d infra/scripts
    - test -d software
    - echo "Basic validation passed"

validate-tools:
  stage: validate  
  image: alpine:latest
  before_script:
    - apk add --no-cache make bash
  script:
    - echo "Testing make targets"
    - make help
    - make -n up
    - make -n test
    - echo "Make targets validated"

test-kubernetes-basic:
  stage: test-kubernetes
  image: docker:27.0.3
  tags:
    - docker-small          # target runner with host docker
  variables:
    DOCKER_HOST: unix:///var/run/docker.sock
    KUBECONFIG: "$CI_PROJECT_DIR/data/kubeconfig/config"
    KIND_CONFIG: "minimal"
    METALLB_ENABLED: "false"
    INGRESS_ENABLED: "false" 
    FLUX_ENABLED: "false"
  before_script:
    # Fail fast if socket is missing (mis-scheduled runner)
    - if [ ! -S /var/run/docker.sock ]; then echo "No Docker socket found - must run on docker-small runner"; exit 1; fi
    - echo "Installing Kubernetes tools..."
    - apk add --no-cache make bash curl jq
    
    # Install Kind
    - curl -Lo /usr/local/bin/kind https://kind.sigs.k8s.io/dl/v0.25.0/kind-linux-amd64
    - chmod +x /usr/local/bin/kind
    
    # Install kubectl
    - curl -LO "https://dl.k8s.io/release/v1.31.0/bin/linux/amd64/kubectl"
    - chmod +x kubectl && mv kubectl /usr/local/bin/
    
    # Install Helm
    - curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
    
    # Install Flux CLI
    - curl -s https://fluxcd.io/install.sh | bash
    - if [ -f /root/.local/bin/flux ]; then mv /root/.local/bin/flux /usr/local/bin/; fi
    
    - echo "Tools installed"
    - kind version && kubectl version --client && helm version && flux version --client && docker version
  script:
    - echo "Testing OSDU-CI minimal cluster functionality..."
    - make up minimal
    - echo "Cluster created successfully"
    - kubectl get nodes
    - kubectl get pods -A
    - echo "Basic Kubernetes testing completed successfully"
  after_script:
    - echo "Cleaning up..."
    - make clean || true
    - echo "Cleanup completed"