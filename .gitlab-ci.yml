# GitLab CI/CD Pipeline for OSDU-CI Development Environment  
# Hybrid approach: Fast validation + Tooling verification (K8s testing via GitHub Actions)

stages:
  - validate
  - test-tooling

validate-basic:
  stage: validate
  image: alpine:latest
  script:
    - echo "Testing basic GitLab CI validation approach"
    - ls -la
    - test -f Makefile
    - test -f README.md
    - test -d infra/scripts
    - test -d software
    - echo "Basic validation passed"

validate-tools:
  stage: validate  
  image: alpine:latest
  before_script:
    - apk add --no-cache make bash
  script:
    - echo "Testing make targets"
    - make help
    - make -n up
    - make -n test
    - echo "Make targets validated"

test-tooling-validation:
  stage: test-tooling
  image: docker:27.0.3
  tags:
    - docker-small
  variables:
    DOCKER_HOST: unix:///var/run/docker.sock
  before_script:
    - if [ ! -S /var/run/docker.sock ]; then echo "No Docker socket found"; exit 1; fi
    - echo "Installing tools..."
    - apk add --no-cache make bash curl jq
    - curl -Lo /usr/local/bin/kind https://kind.sigs.k8s.io/dl/v0.25.0/kind-linux-amd64
    - chmod +x /usr/local/bin/kind
    - curl -LO "https://dl.k8s.io/release/v1.31.0/bin/linux/amd64/kubectl"
    - chmod +x kubectl && mv kubectl /usr/local/bin/
    - echo "Tools ready"
  script:
    - echo "Testing tooling validation..."
    - make help
    - kind version
    - kubectl version --client
    - docker ps
    - test -f infra/scripts/cluster-up.sh
    - echo "Tooling validation completed!"