# GitLab CI/CD Pipeline for OSDU-CI Kubernetes Development Environment
# Tests the GitOps-first user experience: make up → make test → make clean

stages:
  - integration-test

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""
  DOCKER_BUILDKIT: "0"

# Integration test that mirrors the actual user workflow
test-gitops-experience:
  stage: integration-test
  image: docker:24.0
  services:
    - docker:24.0-dind
  before_script:
    # Install required tools
    - echo "[DEPS] Installing dependencies..."
    - apk add --no-cache make bash curl jq
    # Install Kind
    - curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.25.0/kind-linux-amd64
    - chmod +x ./kind && mv ./kind /usr/local/bin/
    # Install kubectl
    - curl -LO "https://dl.k8s.io/release/v1.33.1/bin/linux/amd64/kubectl"
    - chmod +x kubectl && mv kubectl /usr/local/bin/
    # Install Helm
    - curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
    # Install Flux CLI
    - curl -s https://fluxcd.io/install.sh | bash
    - mv /root/.local/bin/flux /usr/local/bin/
    # Verify installations
    - echo "[OK] Tools installed:"
    - kind version
    - kubectl version --client --short
    - helm version --short
    - flux version --client
  script:
    - echo "[START] Testing OSDU-CI GitOps-first experience..."
    
    # Step 1: Create GitOps-enabled cluster
    - echo "[STEP] Step 1/3: Creating cluster with GitOps..."
    - make up
    - echo "[OK] Cluster created successfully"
    
    # Step 2: Run comprehensive validation
    - echo "[STEP] Step 2/3: Running validation tests..."
    - make test
    - echo "[OK] Validation tests passed"
    
    # Step 3: Verify GitOps + Ingress integration
    - echo "[STEP] Step 3/3: Testing GitOps + Ingress integration..."
    - export KUBECONFIG=$(pwd)/data/kubeconfig/config
    
    # Wait for Flux to reconcile the demo app
    - echo "[WAIT] Waiting for Flux to deploy demo app..."
    - "for i in {1..60}; do kubectl get deployment demo-app >/dev/null 2>&1 && break || echo 'Waiting for demo-app deployment...'; sleep 5; done"
    - kubectl wait --for=condition=available --timeout=300s deployment/demo-app
    
    # Test that the ingress is accessible
    - echo "[NET] Testing ingress accessibility..."
    - kubectl wait --for=condition=ready --timeout=120s pod -l app.kubernetes.io/component=controller -n ingress-nginx
    - sleep 10
    
    # Test HTTP access to the demo app
    - echo "[TEST] Testing HTTP access to demo app via localhost:8080..."
    - "for i in {1..15}; do curl -f -s http://localhost:8080 >/dev/null && break || echo 'Waiting for ingress...'; sleep 2; done"
    - curl -f http://localhost:8080 | grep -i "OSDU-CI GitOps Demo"
    
    # Verify Flux resources are healthy
    - echo "[FLUX] Verifying Flux GitOps status..."
    - flux get sources git || echo "No git sources found"
    - flux get kustomizations || echo "No kustomizations found"
    
    - echo "[OK] GitOps + Ingress integration test completed successfully!"
  after_script:
    # Step 4: Clean up everything
    - echo "[STEP] Step 4/4: Cleaning up resources..."
    - make clean || echo "Cleanup completed with warnings"
    - docker system prune -f || true
    - echo "[OK] Full integration test completed"