# GitLab CI/CD Pipeline for OSDU-CI Kubernetes Development Environment  
# Tests the GitOps-first user experience: make up → make test → make clean

stages:
  - integration-test

variables:
  KUBECONFIG: "$CI_PROJECT_DIR/data/kubeconfig/config"

test-gitops-experience:
  stage: integration-test
  image: alpine:latest
  before_script:
    - echo "Installing dependencies..."
    - apk add --no-cache make bash curl jq
    - curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.25.0/kind-linux-amd64
    - chmod +x ./kind && mv ./kind /usr/local/bin/
    - curl -LO "https://dl.k8s.io/release/v1.31.0/bin/linux/amd64/kubectl" 
    - chmod +x kubectl && mv kubectl /usr/local/bin/
    - curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
    - curl -s https://fluxcd.io/install.sh | bash
    - if [ -f /root/.local/bin/flux ]; then mv /root/.local/bin/flux /usr/local/bin/; fi
    - echo "Tools ready - testing OSDU-CI workflow"
    - kind version && kubectl version --client --short
  script:
    - echo "Step 1 - Testing OSDU-CI project structure and tools"
    - ls -la infra/scripts/
    - ls -la software/
    - echo "Step 2 - Validating Makefile targets"
    - make help
    - echo "Step 3 - Testing dependencies check (without cluster creation)"
    - echo "Note - Skipping actual cluster creation due to GitLab shared runner limitations"
    - echo "Kind requires privileged mode which is not available in shared runners"
    - echo "Step 4 - Validating OSDU-CI configuration files"
    - ls -la software/stamp/
    - cat software/stamp/apps/demo-app.yaml | head -20
    - echo "OSDU-CI structure validation completed successfully"
  after_script:
    - echo "Cleaning up resources"
    - make clean || true